apiVersion: v1
kind: Namespace
metadata:
  name: codius-web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: codius-web
  namespace: codius-web
  labels:
    app: codius-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: codius-web
  template:
    metadata:
      labels:
        app: codius-web
    spec:
      containers:
      - name: codius-web
        image: wilsonianbcoil/codius-web
        env:
        - name: DASHBOARD_URL
          value: https://codius-web.example.com
        - name: PAYMENT_POINTER
          value: "$example.com/codius-web"
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: codius-web
  namespace: codius-web
spec:
  selector:
    app: codius-web
  ports:
  - protocol: TCP
    port: 3000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: codius-web
  namespace: codius-web
  annotations:
    kubernetes.io/ingress.class: "traefik"
    ingress.kubernetes.io/ssl-redirect: "true"
    ingress.kubernetes.io/hsts-max-age: "63072000"
    ingress.kubernetes.io/hsts-include-subdomains: "true"
    ingress.kubernetes.io/hsts-preload: "true"
    ingress.kubernetes.io/frame-deny: "true"
    ingress.kubernetes.io/content-type-nosniff: "true"
    ingress.kubernetes.io/browser-xss-filter: "true"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  tls:
  - hosts:
    - codius-web.example.com
    - "*.codius-web.example.com"
    secretName: codius-web-certificate
  rules:
  - host: "codius-web.example.com"
    http: &http_rules
      paths:
      - backend:
          serviceName: codius-web
          servicePort: 3000
  - host: "*.codius-web.example.com"
    http: *http_rules
