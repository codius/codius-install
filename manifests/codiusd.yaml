apiVersion: v1
kind: Namespace
metadata:
  name: codius-untrusted
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  namespace: codius-untrusted
  name: codius-untrusted
spec:
  policyTypes:
  - Egress
  podSelector: {}
  egress:
  - to:
    - ipBlock:
       cidr: 0.0.0.0/0
       except:
       - 10.0.0.0/8
       - 172.16.0.0/12
       - 192.168.0.0/16
---
apiVersion: v1
kind: Namespace
metadata:
  name: codiusd
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: codiusd
  namespace: codiusd
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: codius-untrusted
  name: codiusd
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: codiusd
  namespace: codius-untrusted
subjects:
- kind: ServiceAccount
  name: codiusd
  namespace: codiusd
roleRef:
  kind: Role
  name: codiusd
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: codiusd-pvc
  namespace: codiusd
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  name: codiusd-service
  namespace: codiusd
spec:
  type: LoadBalancer
  selector:
    app: codiusd
  ports:
  - protocol: TCP
    port: 3000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: codiusd
  namespace: codiusd
  annotations:
    kubernetes.io/ingress.class: "traefik"
    ingress.kubernetes.io/ssl-redirect: "true"
    ingress.kubernetes.io/hsts-max-age: "63072000"
    ingress.kubernetes.io/hsts-include-subdomains: "true"
    ingress.kubernetes.io/hsts-preload: "true"
    ingress.kubernetes.io/frame-deny: "true"
    ingress.kubernetes.io/content-type-nosniff: "true"
    ingress.kubernetes.io/browser-xss-filter: "true"
spec:
  tls:
  - hosts:
    - codius.example.com
    - "*.codius.example.com"
    secretName: codiusd-certificate
  rules:
  - host: "codius.example.com"
    http: &http_rules
      paths:
      - backend:
          serviceName: codiusd-service
          servicePort: 3000
  - host: "*.codius.example.com"
    http: *http_rules
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: codiusd
  namespace: codiusd
  labels:
    app: codiusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: codiusd
  template:
    metadata:
      labels:
        app: codiusd
    spec:
      containers:
      - name: codiusd
        image: wilsonianbcoil/codiusd
        env:
        - name: CODIUS_PUBLIC_URI
          value: https://codius.example.com
        - name: DEBUG
          value: "*codiusd*"
        - name: CODIUS_BIND_IP
          value: "0.0.0.0"
        - name: CODIUS_ADMIN_API
          value: "true"
        - name: ILP_BTP_SERVER
          value: "btp+ws://moneyd.moneyd:7768"
        - name: CODIUS_K8S_NAMESPACE
          value: codius-untrusted
        ports:
        - containerPort: 3000
        - containerPort: 3001
        volumeMounts:
        - name: data-volume
          mountPath: /var/lib/codius
      serviceAccountName: codiusd
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: codiusd-pvc
